[{"/Users/katiefriis/Documents/course/cs1300/development/src/reportWebVitals.js":"1","/Users/katiefriis/Documents/course/cs1300/development/src/App.jsx":"2","/Users/katiefriis/Documents/course/cs1300/development/src/FilteredList.jsx":"3","/Users/katiefriis/Documents/course/cs1300/development/src/DisplayList.jsx":"4","/Users/katiefriis/Documents/course/cs1300/development/src/ControlMenu.jsx":"5","/Users/katiefriis/Documents/course/cs1300/development/src/MyDayContainer.jsx":"6","/Users/katiefriis/Documents/course/cs1300/development/src/index.js":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":8921,"mtime":1610522019194,"results":"10","hashOfConfig":"9"},{"size":2728,"mtime":1609908417689,"results":"11","hashOfConfig":"9"},{"size":1666,"mtime":1610237743660,"results":"12","hashOfConfig":"9"},{"size":2877,"mtime":1609651300006,"results":"13","hashOfConfig":"9"},{"size":3328,"mtime":1610521985516,"results":"14","hashOfConfig":"9"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ceyebz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/katiefriis/Documents/course/cs1300/development/src/reportWebVitals.js",[],["34","35"],"/Users/katiefriis/Documents/course/cs1300/development/src/App.jsx",["36","37","38"],"/Users/katiefriis/Documents/course/cs1300/development/src/FilteredList.jsx",["39"],"import React, {Component} from 'react'\nimport DisplayList from './DisplayList';\nimport ControlMenu from './ControlMenu';\n\n\nclass FilteredList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: \"all\",\n            intensity: \"any\",\n            sorter: 'default'\n        };\n      }\n\n    /* Functions for updating the state when different drop down items are selected */\n    onSelectFilterDuration = event => {\n        this.setState({\n            duration: event\n        })\n    }\n\n    onSelectFilterIntensity = event => {\n        this.setState({\n            intensity: event\n        })\n    }\n\n    onSelectChangeSort = event => {\n        this.setState({\n            sorter:event\n        })\n    }\n\n    /* Functions for filtering cards based on whether they match the states */ \n    matchesFilterDuration = item => {\n        if(this.state.duration === \"all\") {\n            return true\n        } else if (this.state.duration === 'short' && item.duration <= 20) {\n            return true\n        } else if (this.state.duration === 'medium' && item.duration > 20 && item.duration < 60) {\n            return true\n        } else if (this.state.duration === 'long' && item.duration >= 60){\n            return true\n        } else {\n            return false\n        }\n    }\n\n    matchesFilterIntensity = item => {\n        if(this.state.intensity === \"any\")  {\n            return true\n        } else if (this.state.intensity === item.intensity) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    matchesFilters = item => {\n        return this.matchesFilterDuration(item) && this.matchesFilterIntensity(item)\n    }\n\n    // Sorting conditions based on which dropdown item is selected\n    getSorter = (a, b) => {\n        if (this.state.sorter === 'default') {\n            return null\n        } else if (this.state.sorter === 'Duration (low to high)') {\n            return a.duration - b.duration\n        } else if (this.state.sorter === 'Duration (high to low)') {\n            return b.duration - a.duration\n        }\n    }\n\n  \n    render() {\n        const products = this.props.list;\n        return (\n            <div>\n                <ControlMenu duration={this.state.duration} intensity={this.state.intensity} sorter={this.state.sorter} filterDuration={this.onSelectFilterDuration} filterIntensity={this.onSelectFilterIntensity} changeSort={this.onSelectChangeSort}/>\n                <div >\n                    <DisplayList list={this.props.list.filter(this.matchesFilters).sort(this.getSorter)} addCard={this.props.addCard} images={this.props.images}/>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default FilteredList;",["40","41"],"/Users/katiefriis/Documents/course/cs1300/development/src/DisplayList.jsx",["42"],"import React, {Component} from 'react'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\n\nimport Button from 'react-bootstrap/Button'\n\n\nclass DisplayList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    // Creates a card for each activity\n    createItem = item => {  \n        return (\n            <div>\n                <Card \n                    className=\"fullCard mb-4\"\n                >\n                    <Card.Img className=\"card-image\" variant=\"top\" src={this.props.images[item.icon_name]}/>\n\n                    <Card.Body>\n                    <Card.Title>{item.title} </Card.Title>\n                    <Card.Text className=\"card-description\">\n                        {item.description}\n\n                    </Card.Text>\n                    <Card.Text>\n                    <Badge className=\"card-badge\" variant=\"light\">~ {item.duration} mins</Badge>\n                        <Badge className=\"card-badge\" variant=\"light\">{item.intensity} intensity</Badge>\n                        </Card.Text>\n                    <Button id=\"add-button\" onClick={() => this.props.addCard(item)}>Do it</Button>\n                    </Card.Body>\n                    {/* <Card.Footer>\n                        {'Footer content'}\n                    </Card.Footer> */}\n                </Card>\n            </div>\n            );\n    };\n        \n\n    render() {\n        return (\n            <div>\n                <CardDeck>\n                    {this.props.list.map(this.createItem)}\n                </CardDeck>\n            </div>\n        )\n    }\n}\n\nexport default DisplayList;","/Users/katiefriis/Documents/course/cs1300/development/src/ControlMenu.jsx",["43","44"],"/Users/katiefriis/Documents/course/cs1300/development/src/MyDayContainer.jsx",[],"/Users/katiefriis/Documents/course/cs1300/development/src/index.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":25},{"ruleId":"49","severity":1,"message":"53","line":13,"column":8,"nodeType":"51","messageId":"52","endLine":13,"endColumn":16},{"ruleId":"49","severity":1,"message":"54","line":159,"column":9,"nodeType":"51","messageId":"52","endLine":159,"endColumn":17},{"ruleId":"49","severity":1,"message":"55","line":77,"column":15,"nodeType":"51","messageId":"52","endLine":77,"endColumn":23},{"ruleId":"45","replacedBy":"56"},{"ruleId":"47","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":10,"column":5,"nodeType":"60","messageId":"61","endLine":12,"endColumn":6},{"ruleId":"58","severity":1,"message":"59","line":7,"column":5,"nodeType":"60","messageId":"61","endLine":9,"endColumn":6},{"ruleId":"62","severity":1,"message":"63","line":46,"column":17,"nodeType":"64","endLine":46,"endColumn":77},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'ReactTypingEffect' is defined but never used.","Identifier","unusedVar","'RedoIcon' is defined but never used.","'cartOpen' is assigned a value but never used.","'products' is assigned a value but never used.",["65"],["66"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]