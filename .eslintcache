[{"/Users/katiefriis/Documents/course/cs1300/development/src/reportWebVitals.js":"1","/Users/katiefriis/Documents/course/cs1300/development/src/App.jsx":"2","/Users/katiefriis/Documents/course/cs1300/development/src/FilteredList.jsx":"3","/Users/katiefriis/Documents/course/cs1300/development/src/DisplayList.jsx":"4","/Users/katiefriis/Documents/course/cs1300/development/src/ControlMenu.jsx":"5","/Users/katiefriis/Documents/course/cs1300/development/src/MyDayContainer.jsx":"6","/Users/katiefriis/Documents/course/cs1300/development/src/index.js":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":8921,"mtime":1610740198593,"results":"10","hashOfConfig":"9"},{"size":2728,"mtime":1609908417689,"results":"11","hashOfConfig":"9"},{"size":1666,"mtime":1610237743660,"results":"12","hashOfConfig":"9"},{"size":2877,"mtime":1609651300006,"results":"13","hashOfConfig":"9"},{"size":3328,"mtime":1610521985516,"results":"14","hashOfConfig":"9"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ceyebz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/katiefriis/Documents/course/cs1300/development/src/reportWebVitals.js",[],["36","37"],"/Users/katiefriis/Documents/course/cs1300/development/src/App.jsx",["38","39","40"],"import './App.css';\nimport FilteredList from './FilteredList';\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyDayContainer from './MyDayContainer';\nimport ReactTypingEffect from 'react-typing-effect';\nimport Button from 'react-bootstrap/Button'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\n\nimport RedoIcon from '@material-ui/icons/Redo';\n\nimport BakeIcon from \"./icons/bake.svg\"\nimport MeditateIcon from \"./icons/meditate.svg\"\nimport PlantIcon from \"./icons/plant.svg\"\nimport PuzzleIcon from \"./icons/puzzle.svg\"\nimport RunIcon from \"./icons/run.svg\"\nimport TextIcon from \"./icons/text.svg\"\nimport TvIcon from \"./icons/tv.svg\"\nimport VideoChatIcon from \"./icons/video-chat.svg\"\nimport ArtIcon from \"./icons/art.svg\"\nimport CookIcon from \"./icons/cook.svg\"\nimport LanguageIcon from \"./icons/language.svg\"\nimport MovieIcon from \"./icons/movie.svg\"\nimport NapIcon from \"./icons/nap.svg\"\nimport TeaIcon from \"./icons/tea.svg\"\nimport HiitIcon from \"./icons/hiit.svg\"\nimport HikeIcon from \"./icons/hike.svg\"\nimport WalkIcon from \"./icons/walk.svg\"\n\n\nconst activityList = [\n  {title:'Watch TV', description:\"Relax and start a new show or re-watch an old favorite.\", duration: 30, intensity:'low', icon_name:'tv'}, \n  {title:'Bake something', description:\"Find a recipe online or in a cookbook and get to work!\", duration:90, intensity:'moderate', icon_name:'bake'}, \n  {title:'Text someone you miss', description:\"Take a few minutes to tell someone you miss them. They probably miss you too!\", duration:5, intensity:'low', icon_name:'text'},\n  {title:'Video chat an old friend', description:\"Quarantine is a great opportunity to catch up with old friends.\", duration:20, intensity:'low', icon_name:'video-chat'},\n  {title:'Go for a run', description:\"No matter how far or fast, try getting out of the house (or onto the treadmill) and get your body moving. Good music or podcasts might make it more enjoyable!\", duration:30, intensity:'high', icon_name:'run'},\n  {title:'Meditate', description:\"Take a moment to bring you attention inward and focus on your body and your breath. You can find guided meditations online or on free apps like Headspace.\", duration:30, intensity:'low', icon_name:'meditate'},\n  {title:'Grow a plant', description:\"Whether an indoor houseplant or an outdoor garden, caring for plants and watching them grow can be great for mental health, and can be tasty or pretty too!\", duration:90, intensity:'moderate', icon_name:'plant'},\n  {title:'Do a puzzle', description:\"Finally break open that puzzle thatâ€™s been laying around your house, or go to your local toy store and buy one!\", duration:60, intensity:'low', icon_name:'puzzle'},\n  {title:'Watch a movie', description:\"Those long movies you've always wanted to watch but still haven't? Now's their time.\", duration:120, intensity:'low', icon_name:'movie'},\n  {title:'Take a nap', description:\"Sometimes the best activity is sleep. Turn off the lights, close the curtains, and get some shut-eye. You deserve it.\", duration:30, intensity:'low', icon_name:'nap'},\n  {title:'Make a cup of tea', description:\"Tea makes everything better :)\", duration:5, intensity:'low', icon_name:'tea'},\n  {title:'Draw or paint', description:\"Break out your artistic side! Your creation may make for great wall art or a great gift.\", duration:45, intensity:'moderate', icon_name:'art'},\n  {title:'Study a new language', description:\"Download an app like Duolingo and get going on a new language or practice an old one.\", duration:60, intensity:'moderate', icon_name:'language'},\n  {title:'Cook a new recipe', description:\"There are hundreds of amazing recipes out there waiting to be tried. Pick the one that looks the tastiest, gather the ingredients, and get started!\", duration:90, intensity:'moderate', icon_name:'cook'},\n  {title:'Do a HIIT workout', description:\"Want a high intensity workout in a short amount of time? Search HIIT workouts to find free guided ones online.\", duration:10, intensity:'high', icon_name:'hiit'},\n  {title:'Go for a hike', description:\"Get out of the house and enjoy some views! Free apps like AllTrails allow you to find nearby hikes of the length and difficulty that you're looking for.\", duration:120, intensity:'high', icon_name:'hike'},\n  {title:'Go for a walk', description:\"Go outside, breathe fresh air, and get your muscles moving.\", duration:20, intensity:'moderate', icon_name:'walk'},\n\n];\n\nconst images = {\n  'bake':BakeIcon,\n  'meditate':MeditateIcon,\n  'plant':PlantIcon,\n  'puzzle':PuzzleIcon,\n  'run':RunIcon,\n  'text':TextIcon,\n  'tv':TvIcon,\n  'video-chat':VideoChatIcon,\n  'art':ArtIcon,\n  'cook':CookIcon,\n  'language':LanguageIcon,\n  'movie':MovieIcon,\n  'nap':NapIcon,\n  'tea':TeaIcon,\n  'hiit':HiitIcon,\n  'hike': HikeIcon,\n  'walk': WalkIcon\n}\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      cardDrawn: null,\n      cartItems: [], // List of items that are in \"My Day\"\n      cartTotalMins: 0, // Total sum of minutes in \"My Day\"\n      animationEnded:false,\n    }\n  }\n  \n\n  drawCard = newItem => {\n    let randNum = Math.floor(Math.random()*activityList.length)\n    this.setState(\n      {\n        cardDrawn:activityList[randNum]\n      }\n    )\n\n  }\n\n  // Functions to add and remove cards from the \"My Day\" section. These are passed into MyDayContainer as CallBack functions.\n  addCard = newItem => {\n    // console.log(\"before\", newItem)\n    const itemCopy = {\n      title: newItem.title,\n      description: newItem.description,\n      duration: newItem.duration,\n      intensity: newItem.intensity,\n      key: Date.now()\n    };\n    console.log(\"added\", itemCopy)\n    this.setState({\n      cartItems:[...this.state.cartItems, itemCopy],\n      cartTotalMins: this.state.cartTotalMins + itemCopy.duration\n    })\n    console.log(\"cart\", this.state.cartItems)\n  }\n\n  removeCard = (event, removeItem) => {\n    console.log(\"remove\", removeItem)\n    event.stopPropagation();\n\n    this.setState({\n      cartItems:this.state.cartItems.filter(item => {return item.key !== removeItem.key}),\n      cartTotalMins: this.state.cartTotalMins - removeItem.duration\n    })\n  }\n\n\n  // Creates a card for each activity\n  createItem = item => {  \n    return (\n        <div className=\"centered-div\">\n            <Card \n                className=\"fullCard mb-4\"\n                id=\"suggested-card\"\n            >\n                <Card.Img className=\"card-image\" variant=\"top\" src={images[item.icon_name]}/>\n\n                <Card.Body>\n                <Card.Title>{item.title} </Card.Title>\n                <Card.Text className=\"card-description\">\n                    {item.description}\n\n                </Card.Text>\n                <Card.Text>\n                <Badge className=\"card-badge\" variant=\"light\">~ {item.duration} mins</Badge>\n                    <Badge className=\"card-badge\" variant=\"light\">{item.intensity} intensity</Badge>\n                    </Card.Text>\n                <Button id=\"add-button\" onClick={() => this.addCard(item)}>Do it</Button>\n                </Card.Body>\n                {/* <Card.Footer>\n                    {'Footer content'}\n                </Card.Footer> */}\n            </Card>\n        </div>\n        );\n};\n\n  render() {\n    let cartOpen = this.state.cartOpen ? 'open' : 'closed';\n    let buttonText = \"Yes\";\n    let suggestedCard;\n    let ideaText;\n    let buttonId;\n\n    if (this.state.cardDrawn == null) {\n      suggestedCard = <div></div>;\n      if (this.state.animationEnded){\n        buttonId=\"yes-button\"\n      } else {\n        buttonId=\"hidden-button\"\n      }\n  \n    } else {\n      ideaText=\"Here's an idea:\"\n      suggestedCard = this.createItem(this.state.cardDrawn)\n      buttonText =\"Redraw\"\n      buttonId=\"redraw-button\"\n    }\n\n\n    return (\n      <div className='body-div'>\n        <div className=\"landing-div\">\n          <h3 onAnimationEnd={()=>this.setState({animationEnded:true})}>Are you bored?</h3>\n          <h5 className=\"mt-4\">{ideaText}</h5>\n\n          {suggestedCard}\n\n          <div>\n          <Button id={buttonId} onClick={this.drawCard}>{buttonText}</Button>\n\n          </div>\n          \n          <div id=\"browse-all\">\n          <p className=\"mb-0\">Browse All</p>\n          <ExpandMoreIcon/>\n\n          </div>\n          \n        </div>\n\n\n\n      <div className='browse-div' >\n        <div >\n          <h2>Quarantine Cards</h2>\n          <h5>Activity ideas to help you get through quarantine</h5>\n          <div className=\"cards-div\">\n            <FilteredList list={activityList} addCard={this.addCard} images={images}/>\n          </div>\n        </div>\n        <div>\n          <MyDayContainer list={this.state.cartItems} isCart={true} removeCard={this.removeCard} totalMins={this.state.cartTotalMins}/>\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n","/Users/katiefriis/Documents/course/cs1300/development/src/FilteredList.jsx",["41"],"import React, {Component} from 'react'\nimport DisplayList from './DisplayList';\nimport ControlMenu from './ControlMenu';\n\n\nclass FilteredList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: \"all\",\n            intensity: \"any\",\n            sorter: 'default'\n        };\n      }\n\n    /* Functions for updating the state when different drop down items are selected */\n    onSelectFilterDuration = event => {\n        this.setState({\n            duration: event\n        })\n    }\n\n    onSelectFilterIntensity = event => {\n        this.setState({\n            intensity: event\n        })\n    }\n\n    onSelectChangeSort = event => {\n        this.setState({\n            sorter:event\n        })\n    }\n\n    /* Functions for filtering cards based on whether they match the states */ \n    matchesFilterDuration = item => {\n        if(this.state.duration === \"all\") {\n            return true\n        } else if (this.state.duration === 'short' && item.duration <= 20) {\n            return true\n        } else if (this.state.duration === 'medium' && item.duration > 20 && item.duration < 60) {\n            return true\n        } else if (this.state.duration === 'long' && item.duration >= 60){\n            return true\n        } else {\n            return false\n        }\n    }\n\n    matchesFilterIntensity = item => {\n        if(this.state.intensity === \"any\")  {\n            return true\n        } else if (this.state.intensity === item.intensity) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    matchesFilters = item => {\n        return this.matchesFilterDuration(item) && this.matchesFilterIntensity(item)\n    }\n\n    // Sorting conditions based on which dropdown item is selected\n    getSorter = (a, b) => {\n        if (this.state.sorter === 'default') {\n            return null\n        } else if (this.state.sorter === 'Duration (low to high)') {\n            return a.duration - b.duration\n        } else if (this.state.sorter === 'Duration (high to low)') {\n            return b.duration - a.duration\n        }\n    }\n\n  \n    render() {\n        const products = this.props.list;\n        return (\n            <div>\n                <ControlMenu duration={this.state.duration} intensity={this.state.intensity} sorter={this.state.sorter} filterDuration={this.onSelectFilterDuration} filterIntensity={this.onSelectFilterIntensity} changeSort={this.onSelectChangeSort}/>\n                <div >\n                    <DisplayList list={this.props.list.filter(this.matchesFilters).sort(this.getSorter)} addCard={this.props.addCard} images={this.props.images}/>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default FilteredList;",["42","43"],"/Users/katiefriis/Documents/course/cs1300/development/src/DisplayList.jsx",["44"],"import React, {Component} from 'react'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\n\nimport Button from 'react-bootstrap/Button'\n\n\nclass DisplayList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    // Creates a card for each activity\n    createItem = item => {  \n        return (\n            <div>\n                <Card \n                    className=\"fullCard mb-4\"\n                >\n                    <Card.Img className=\"card-image\" variant=\"top\" src={this.props.images[item.icon_name]}/>\n\n                    <Card.Body>\n                    <Card.Title>{item.title} </Card.Title>\n                    <Card.Text className=\"card-description\">\n                        {item.description}\n\n                    </Card.Text>\n                    <Card.Text>\n                    <Badge className=\"card-badge\" variant=\"light\">~ {item.duration} mins</Badge>\n                        <Badge className=\"card-badge\" variant=\"light\">{item.intensity} intensity</Badge>\n                        </Card.Text>\n                    <Button id=\"add-button\" onClick={() => this.props.addCard(item)}>Do it</Button>\n                    </Card.Body>\n                    {/* <Card.Footer>\n                        {'Footer content'}\n                    </Card.Footer> */}\n                </Card>\n            </div>\n            );\n    };\n        \n\n    render() {\n        return (\n            <div>\n                <CardDeck>\n                    {this.props.list.map(this.createItem)}\n                </CardDeck>\n            </div>\n        )\n    }\n}\n\nexport default DisplayList;","/Users/katiefriis/Documents/course/cs1300/development/src/ControlMenu.jsx",["45","46"],"/Users/katiefriis/Documents/course/cs1300/development/src/MyDayContainer.jsx",[],"/Users/katiefriis/Documents/course/cs1300/development/src/index.js",[],["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":13,"column":8,"nodeType":"55","messageId":"56","endLine":13,"endColumn":16},{"ruleId":"53","severity":1,"message":"58","line":159,"column":9,"nodeType":"55","messageId":"56","endLine":159,"endColumn":17},{"ruleId":"53","severity":1,"message":"59","line":77,"column":15,"nodeType":"55","messageId":"56","endLine":77,"endColumn":23},{"ruleId":"49","replacedBy":"60"},{"ruleId":"51","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":10,"column":5,"nodeType":"64","messageId":"65","endLine":12,"endColumn":6},{"ruleId":"62","severity":1,"message":"63","line":7,"column":5,"nodeType":"64","messageId":"65","endLine":9,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":46,"column":17,"nodeType":"68","endLine":46,"endColumn":77},{"ruleId":"49","replacedBy":"69"},{"ruleId":"51","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'ReactTypingEffect' is defined but never used.","Identifier","unusedVar","'RedoIcon' is defined but never used.","'cartOpen' is assigned a value but never used.","'products' is assigned a value but never used.",["71"],["72"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["71"],["72"],"no-global-assign","no-unsafe-negation"]