[{"/Users/katiefriis/Documents/course/cs1300/development/src/reportWebVitals.js":"1","/Users/katiefriis/Documents/course/cs1300/development/src/App.jsx":"2","/Users/katiefriis/Documents/course/cs1300/development/src/FilteredList.jsx":"3","/Users/katiefriis/Documents/course/cs1300/development/src/DisplayList.jsx":"4","/Users/katiefriis/Documents/course/cs1300/development/src/ControlMenu.jsx":"5","/Users/katiefriis/Documents/course/cs1300/development/src/MyDayContainer.jsx":"6","/Users/katiefriis/Documents/course/cs1300/development/src/index.js":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":9654,"mtime":1610920595899,"results":"10","hashOfConfig":"9"},{"size":2728,"mtime":1609908417689,"results":"11","hashOfConfig":"9"},{"size":1674,"mtime":1610826125894,"results":"12","hashOfConfig":"9"},{"size":2877,"mtime":1609651300006,"results":"13","hashOfConfig":"9"},{"size":4906,"mtime":1610921414108,"results":"14","hashOfConfig":"9"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ceyebz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/katiefriis/Documents/course/cs1300/development/src/reportWebVitals.js",[],["35","36"],"/Users/katiefriis/Documents/course/cs1300/development/src/App.jsx",["37","38","39"],"/Users/katiefriis/Documents/course/cs1300/development/src/FilteredList.jsx",["40"],"import React, {Component} from 'react'\nimport DisplayList from './DisplayList';\nimport ControlMenu from './ControlMenu';\n\n\nclass FilteredList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: \"all\",\n            intensity: \"any\",\n            sorter: 'default'\n        };\n      }\n\n    /* Functions for updating the state when different drop down items are selected */\n    onSelectFilterDuration = event => {\n        this.setState({\n            duration: event\n        })\n    }\n\n    onSelectFilterIntensity = event => {\n        this.setState({\n            intensity: event\n        })\n    }\n\n    onSelectChangeSort = event => {\n        this.setState({\n            sorter:event\n        })\n    }\n\n    /* Functions for filtering cards based on whether they match the states */ \n    matchesFilterDuration = item => {\n        if(this.state.duration === \"all\") {\n            return true\n        } else if (this.state.duration === 'short' && item.duration <= 20) {\n            return true\n        } else if (this.state.duration === 'medium' && item.duration > 20 && item.duration < 60) {\n            return true\n        } else if (this.state.duration === 'long' && item.duration >= 60){\n            return true\n        } else {\n            return false\n        }\n    }\n\n    matchesFilterIntensity = item => {\n        if(this.state.intensity === \"any\")  {\n            return true\n        } else if (this.state.intensity === item.intensity) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    matchesFilters = item => {\n        return this.matchesFilterDuration(item) && this.matchesFilterIntensity(item)\n    }\n\n    // Sorting conditions based on which dropdown item is selected\n    getSorter = (a, b) => {\n        if (this.state.sorter === 'default') {\n            return null\n        } else if (this.state.sorter === 'Duration (low to high)') {\n            return a.duration - b.duration\n        } else if (this.state.sorter === 'Duration (high to low)') {\n            return b.duration - a.duration\n        }\n    }\n\n  \n    render() {\n        const products = this.props.list;\n        return (\n            <div>\n                <ControlMenu duration={this.state.duration} intensity={this.state.intensity} sorter={this.state.sorter} filterDuration={this.onSelectFilterDuration} filterIntensity={this.onSelectFilterIntensity} changeSort={this.onSelectChangeSort}/>\n                <div >\n                    <DisplayList list={this.props.list.filter(this.matchesFilters).sort(this.getSorter)} addCard={this.props.addCard} images={this.props.images}/>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default FilteredList;",["41","42"],"/Users/katiefriis/Documents/course/cs1300/development/src/DisplayList.jsx",["43"],"/Users/katiefriis/Documents/course/cs1300/development/src/ControlMenu.jsx",["44","45"],"import React, {Component} from 'react'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\n\nclass ControlMenu extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    // Helper function for displaying the dropdown titles\n    getTitle = (filterName, filterVal) => {\n        return filterName+\" (\"+filterVal+\")\"\n    }\n\n    // Resets all the filters and sorters to their default settings\n    reset = () => {\n        this.props.filterDuration(\"all\")\n        this.props.filterIntensity(\"any\")\n        this.props.changeSort(\"default\")\n    }\n\n    render() {\n        return (\n            <div className=\"sticky\">\n                <ButtonToolbar className=\"toolbar\">\n                <p className=\"toolbar-text-no-padding\">Filter by:</p>\n                <DropdownButton className=\"dropdown-button\" id=\"dropdown-button\" title={this.getTitle(\"Duration\",this.props.duration)}>\n                    <Dropdown.Item eventKey=\"all\" onSelect={this.props.filterDuration}>All</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"short\" onSelect={this.props.filterDuration}>Short</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"medium\" onSelect={this.props.filterDuration}>Medium</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"long\" onSelect={this.props.filterDuration}>Long</Dropdown.Item>\n                </DropdownButton>\n                <DropdownButton className=\"dropdown-button\" id=\"dropdown-button\" title={this.getTitle(\"Intensity\",this.props.intensity)}>\n                    <Dropdown.Item eventKey=\"any\" onSelect={this.props.filterIntensity}>Any</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"low\" onSelect={this.props.filterIntensity}>Low</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"moderate\" onSelect={this.props.filterIntensity}>Moderate</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"high\" onSelect={this.props.filterIntensity}>High</Dropdown.Item>\n                </DropdownButton>\n                <p className=\"toolbar-text\">Sort by:</p>\n                <DropdownButton className=\"dropdown-button\" id=\"sort-dropdown-button\" title={this.props.sorter}>\n                    <Dropdown.Item eventKey=\"default\" onSelect={this.props.changeSort}>Default</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"Duration (low to high)\" onSelect={this.props.changeSort}>Duration (low to high)</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"Duration (high to low)\" onSelect={this.props.changeSort}>Duration (high to low)</Dropdown.Item>\n                </DropdownButton>\n                <a className=\"toolbar-text reset-link\" onClick={this.reset}>reset all</a>\n                </ButtonToolbar>\n            </div>\n        )\n    }\n}\n\nexport default ControlMenu;","/Users/katiefriis/Documents/course/cs1300/development/src/MyDayContainer.jsx",["46"],"/Users/katiefriis/Documents/course/cs1300/development/src/index.js",[],["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":14,"column":8,"nodeType":"55","messageId":"56","endLine":14,"endColumn":16},{"ruleId":"53","severity":1,"message":"58","line":171,"column":9,"nodeType":"55","messageId":"56","endLine":171,"endColumn":17},{"ruleId":"53","severity":1,"message":"59","line":77,"column":15,"nodeType":"55","messageId":"56","endLine":77,"endColumn":23},{"ruleId":"49","replacedBy":"60"},{"ruleId":"51","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":10,"column":5,"nodeType":"64","messageId":"65","endLine":12,"endColumn":6},{"ruleId":"62","severity":1,"message":"63","line":7,"column":5,"nodeType":"64","messageId":"65","endLine":9,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":46,"column":17,"nodeType":"68","endLine":46,"endColumn":77},{"ruleId":"69","severity":1,"message":"70","line":105,"column":36,"nodeType":"71","messageId":"72","endLine":105,"endColumn":38},{"ruleId":"49","replacedBy":"73"},{"ruleId":"51","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'ReactTypingEffect' is defined but never used.","Identifier","unusedVar","'RedoIcon' is defined but never used.","'cartOpen' is assigned a value but never used.","'products' is assigned a value but never used.",["75"],["76"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["75"],["76"],"no-global-assign","no-unsafe-negation"]